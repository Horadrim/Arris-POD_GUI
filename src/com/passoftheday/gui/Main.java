/*Created by Plamen Donev
 *Licensed to the Apache Software Foundation (ASF) under one
 *or more contributor license agreements.  See the NOTICE file
 *distributed with this work for additional information
 *regarding copyright ownership.  The ASF licenses this file
 *to you under the Apache License, Version 2.0 (the
 *"License"); you may not use this file except in compliance
 *with the License.  You may obtain a copy of the License at
 *  http://www.apache.org/licenses/LICENSE-2.0 
 *Unless required by applicable law or agreed to in writing,
 *software distributed under the License is distributed on an
 *"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *KIND, either express or implied.  See the License for the
 *specific language governing permissions and limitations
 *under the License.
*/
package com.passoftheday.gui;

import com.passoftheday.gen.ArrisPwdGen;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import com.passoftheday.gui.Dialogs;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import javax.swing.UIManager;
import org.pushingpixels.substance.api.skin.SubstanceMistSilverLookAndFeel;
import com.jtattoo.plaf.noire.*;



public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Tabs = new javax.swing.JTabbedPane();
        singleDayTab = new javax.swing.JPanel();
        enclosurePanel = new javax.swing.JPanel();
        singleDayChooser = new org.freixas.jcalendar.JCalendarCombo();
        singleResult = new javax.swing.JTextField();
        resultLabel = new javax.swing.JLabel();
        dateRangeTab = new javax.swing.JPanel();
        fromDate = new org.freixas.jcalendar.JCalendarCombo();
        fromLabel = new javax.swing.JLabel();
        toLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        rangeResult = new javax.swing.JTextArea();
        toDate = new org.freixas.jcalendar.JCalendarCombo();
        seedLabel = new javax.swing.JLabel();
        seedInput = new javax.swing.JTextField();
        generatePass = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        singleDayChooser.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        singleDayChooser.setDateFormat(date);
        singleDayChooser.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2015-01-15" }));

        resultLabel.setText("Result:");

        javax.swing.GroupLayout enclosurePanelLayout = new javax.swing.GroupLayout(enclosurePanel);
        enclosurePanel.setLayout(enclosurePanelLayout);
        enclosurePanelLayout.setHorizontalGroup(
            enclosurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enclosurePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(enclosurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(singleResult, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                    .addComponent(resultLabel)
                    .addComponent(singleDayChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        enclosurePanelLayout.setVerticalGroup(
            enclosurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enclosurePanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(singleDayChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(resultLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(singleResult, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout singleDayTabLayout = new javax.swing.GroupLayout(singleDayTab);
        singleDayTab.setLayout(singleDayTabLayout);
        singleDayTabLayout.setHorizontalGroup(
            singleDayTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, singleDayTabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(enclosurePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        singleDayTabLayout.setVerticalGroup(
            singleDayTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(singleDayTabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(enclosurePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Tabs.addTab("Single Day", singleDayTab);

        fromDate.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        fromDate.setDateFormat(date);

        fromLabel.setText("From:");

        toLabel.setText("To:");

        rangeResult.setColumns(20);
        rangeResult.setRows(5);
        jScrollPane1.setViewportView(rangeResult);

        toDate.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        toDate.setDateFormat(date);

        javax.swing.GroupLayout dateRangeTabLayout = new javax.swing.GroupLayout(dateRangeTab);
        dateRangeTab.setLayout(dateRangeTabLayout);
        dateRangeTabLayout.setHorizontalGroup(
            dateRangeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dateRangeTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dateRangeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(dateRangeTabLayout.createSequentialGroup()
                        .addComponent(fromLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 192, Short.MAX_VALUE)
                        .addComponent(toLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        dateRangeTabLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {fromDate, toDate});

        dateRangeTabLayout.setVerticalGroup(
            dateRangeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dateRangeTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dateRangeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fromLabel)
                    .addComponent(toLabel)
                    .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                .addContainerGap())
        );

        dateRangeTabLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {fromDate, toDate});

        Tabs.addTab("Date Range", dateRangeTab);

        seedLabel.setText("Seed:");

        seedInput.setText("MPSJKMDHAI");

        generatePass.setText("Generate");
        generatePass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generatePassActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Tabs)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(seedLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(seedInput, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(generatePass)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seedLabel)
                    .addComponent(seedInput, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(generatePass))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generatePassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generatePassActionPerformed
        String seed = seedInput.getText();
        int length = seed.length();
        if ("".equals(seed)){
            Dialogs.errMessage("err2");
            return;
        }
        if (length < 10 || length > 10){
            Dialogs.errMessage("err3");
            return;
        }
        
        generatePass(seed);

    }//GEN-LAST:event_generatePassActionPerformed

    public void generatePass(String seed){
            int c = Tabs.getSelectedIndex();
        if (c == 0) {
            try {
                String single = date.format(singleDayChooser.getDate());
                
                Date singleDate = date.parse(single);
                ArrisPwdGen passGen = new ArrisPwdGen();
                password_list = passGen.GenArrisPasswords(singleDate, singleDate, seed);
                singleResult.setText(password_list.get(single));
            } catch (ParseException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (c == 1) {
            try {
                rangeResult.setText("");
                String fromDat = date.format(fromDate.getDate());
                String toDat = date.format(toDate.getDate());
                Date dateFrom = date.parse(fromDat);
                Date dateTo = date.parse(toDat);
                ArrisPwdGen passGen = new ArrisPwdGen();
                password_list = ArrisPwdGen.GenArrisPasswords(dateFrom, dateTo, seed);
                List<String> keys = new ArrayList<>(password_list.keySet());
                Collections.sort(keys);
                for (Iterator<String> it = keys.iterator(); it.hasNext();) {
                    String date = it.next();
                    String pass = (String) password_list.get(date);
                    rangeResult.append(date + "\t" + pass + "\n");
                }
            } catch (ParseException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }

            

        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Substance MistSilver look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
          //UIManager.setLookAndFeel(new SubstanceMistSilverLookAndFeel());
        	UIManager.setLookAndFeel("com.jtattoo.plaf.noire.NoireLookAndFeel");
        } catch (Exception e) {
          Dialogs.errException(e.toString(), "looks");
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }
    public static HashMap<String, String> password_list;
    protected static SimpleDateFormat date = new SimpleDateFormat("yyyy-MM-dd");
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTabbedPane Tabs;
    public static javax.swing.JPanel dateRangeTab;
    private javax.swing.JPanel enclosurePanel;
    private org.freixas.jcalendar.JCalendarCombo fromDate;
    private javax.swing.JLabel fromLabel;
    private javax.swing.JButton generatePass;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextArea rangeResult;
    private javax.swing.JLabel resultLabel;
    public static javax.swing.JTextField seedInput;
    private javax.swing.JLabel seedLabel;
    private org.freixas.jcalendar.JCalendarCombo singleDayChooser;
    public static javax.swing.JPanel singleDayTab;
    public static javax.swing.JTextField singleResult;
    private org.freixas.jcalendar.JCalendarCombo toDate;
    private javax.swing.JLabel toLabel;
    // End of variables declaration//GEN-END:variables
}
